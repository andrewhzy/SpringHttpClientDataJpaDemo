/tasks:
  post:
    tags:
      - Tasks
    summary: Upload Excel file and create chat evaluation tasks
    description: |
      Upload an Excel file with chat evaluation data. Each sheet will be analyzed 
      and parsed immediately into structured data.
      
      **Chat Evaluation Requirements:**
      - **Required columns**: "question", "golden_answer", "golden_citations"
      
      **File Requirements:**
      - Format: .xlsx or .xls
      - Maximum size: 50MB
      - Maximum sheets: 20 per file
      - Maximum rows per sheet: 1,000
      
      **Processing:**
      - Files are parsed immediately during upload
      - Row data is stored in structured tables (no blob storage)
      - Tasks are created with references to the parsed data
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - file
            properties:
              file:
                type: string
                format: binary
                description: Excel file (.xlsx or .xls)
              description:
                type: string
                description: Optional description for the upload batch
                example: "Monthly evaluation data upload"
    responses:
      '201':
        description: Excel file processed and tasks created successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/task.yaml#/UploadResponse'
      '400':
        $ref: '../components/responses/common.yaml#/BadRequest'
      '401':
        $ref: '../components/responses/common.yaml#/Unauthorized'
      '413':
        $ref: '../components/responses/common.yaml#/PayloadTooLarge'
      '500':
        $ref: '../components/responses/common.yaml#/InternalServerError'

  get:
    tags:
      - Tasks
    summary: List user tasks
    description: |
      Get a list of tasks for the authenticated user using cursor-based pagination.
      
      **Cursor-based Pagination:**
      - First request: Do not include cursor parameter
      - Subsequent requests: Use next_cursor from previous response
      - Better performance than page-based pagination
      
      **Note:** This endpoint returns task metadata only (no input/results data).
      Use the individual task endpoint to get structured row data.
    operationId: listTasks
    parameters:
      - name: per_page
        in: query
        description: Number of items per page
        required: true
        schema:
          type: integer
          minimum: 1
          maximum: 100
      - name: task_type
        in: query
        description: Task type filter
        required: true
        schema:
          $ref: '../components/schemas/task.yaml#/TaskType'
      - name: maxTaskId
        in: query
        description: Cursor for pagination (omit for first page)
        required: false
        schema:
          type: string
          example: "123"
    responses:
      '200':
        description: List of user's tasks (metadata only)
        content:
          application/json:
            schema:
              $ref: '../components/schemas/task.yaml#/TaskList'
      '400':
        $ref: '../components/responses/common.yaml#/BadRequest'
      '401':
        $ref: '../components/responses/common.yaml#/Unauthorized'
      '500':
        $ref: '../components/responses/common.yaml#/InternalServerError'

/tasks/{id}:
  parameters:
    - name: id
      in: path
      required: true
      description: Task ID
      schema:
        type: string
        format: uuid

  get:
    tags:
      - Tasks
    summary: Get task details with structured data and Excel file
    description: |
      Retrieve detailed information about a specific task including parsed input data,
      processing results, and generated Excel file (if completed). Users can only access their own tasks.
      
      **Response includes:**
      - Task metadata (status, progress, etc.)
      - Structured input data (parsed from original Excel)
      - Processing results (if background processing completed)
      - Excel file with evaluation results (if background processing completed)
      
      **Data structure for chat evaluation:**
      - Questions, golden answers, golden citations, similarity scores
      - Excel file contains all input data plus API responses and similarity scores
    responses:
      '200':
        description: Task details with structured input and results data
        content:
          application/json:
            schema:
              $ref: '../components/schemas/task.yaml#/TaskWithData'
            examples:
              chat_evaluation_task:
                summary: Chat Evaluation Task Example
                value:
                  id: "123e4567-e89b-12d3-a456-426614174000"
                  task_type: "chat-evaluation"
                  status: "completed"
                  row_count: 2
                  processed_rows: 2
                  input_data:
                    - row_number: 1
                      question: "What is AI?"
                      golden_answer: "AI is artificial intelligence..."
                      golden_citations: ["https://example.com/ai"]
                    - row_number: 2
                      question: "What is ML?"
                      golden_answer: "ML is machine learning..."
                      golden_citations: ["https://example.com/ml"]
                  results_data:
                    - row_number: 1
                      api_answer: "Artificial intelligence refers to..."
                      api_citations: ["https://api-source.com/ai"]
                      answer_similarity: 0.85
                      citation_similarity: 0.72
                    - row_number: 2
                      api_answer: "Machine learning is a subset..."
                      api_citations: ["https://api-source.com/ml"]
                      answer_similarity: 0.92
                      citation_similarity: 0.88
                  results_excel_file:
                    filename: "task_123e4567_evaluation_results.xlsx"
                    content: "UEsDBBQAAAAIAO..."
                    size: 15360
                    mime_type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                    generated_at: "2024-01-01T00:10:00Z"
      '401':
        $ref: '../components/responses/common.yaml#/Unauthorized'
      '403':
        $ref: '../components/responses/common.yaml#/Forbidden'
      '404':
        $ref: '../components/responses/common.yaml#/NotFound'
      '500':
        $ref: '../components/responses/common.yaml#/InternalServerError'

  put:
    tags:
      - Tasks
    summary: Update/cancel task
    description: |
      Update a task, primarily used for cancelling tasks. Only tasks in 'queueing' or 'processing'
      status can be cancelled. Only task owners can update their tasks.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              action:
                type: string
                enum: [cancel]
                description: Action to perform on the task
                example: "cancel"
    responses:
      '200':
        description: Task updated successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/task.yaml#/Task'
      '400':
        description: Cannot update task in current status
        content:
          application/json:
            schema:
              $ref: '../components/schemas/error.yaml#/Error'
            example:
              error:
                code: "INVALID_STATUS"
                message: "Cannot cancel completed task"
                details: "Task has already finished processing"
      '401':
        $ref: '../components/responses/common.yaml#/Unauthorized'
      '403':
        $ref: '../components/responses/common.yaml#/Forbidden'
      '404':
        $ref: '../components/responses/common.yaml#/NotFound'
      '500':
        $ref: '../components/responses/common.yaml#/InternalServerError'

  delete:
    tags:
      - Tasks
    summary: Delete task
    description: |
      Delete a task permanently. This will remove the task record and 
      associated structured data from input and output tables. 
      Only task owners can delete their tasks.
      Tasks in 'processing' status cannot be deleted.
    responses:
      '204':
        description: Task deleted successfully
      '400':
        description: Cannot delete task in current status
        content:
          application/json:
            schema:
              $ref: '../components/schemas/error.yaml#/Error'
            example:
              error:
                code: "INVALID_STATUS"
                message: "Cannot delete task in processing status"
                details: "Cancel the task first, then delete it"
      '401':
        $ref: '../components/responses/common.yaml#/Unauthorized'
      '403':
        $ref: '../components/responses/common.yaml#/Forbidden'
      '404':
        $ref: '../components/responses/common.yaml#/NotFound'
      '500':
        $ref: '../components/responses/common.yaml#/InternalServerError'