/tasks:
  post:
    tags:
      - Tasks
    summary: Upload Excel file and create chat evaluation tasks
    description: |
      Upload an Excel file with chat evaluation data. Each sheet will be analyzed 
      and parsed immediately into structured data.
      
      **Chat Evaluation Requirements:**
      - **Required columns**: "question", "golden_answer", "golden_citations"
      
      **File Requirements:**
      - Format: .xlsx or .xls
      - Maximum size: 50MB
      - Maximum sheets: 20 per file
      - Maximum rows per sheet: 1,000
      
      **Processing:**
      - Files are parsed immediately during upload
      - Row data is stored in structured tables (no blob storage)
      - Tasks are created with references to the parsed data
      - Task type is automatically determined as 'chat-evaluation' based on Excel content
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - file
            properties:
              file:
                type: string
                format: binary
                description: Excel file (.xlsx or .xls)
              description:
                type: string
                description: Optional description for the upload batch
                example: "Monthly evaluation data upload"
                maxLength: 500
    responses:
      '201':
        description: Excel file processed and tasks created successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/task.yaml#/UploadResponse'
      '400':
        $ref: '../components/responses/common.yaml#/BadRequest'
      '401':
        $ref: '../components/responses/common.yaml#/Unauthorized'
      '413':
        $ref: '../components/responses/common.yaml#/PayloadTooLarge'
      '500':
        $ref: '../components/responses/common.yaml#/InternalServerError'

  get:
    tags:
      - Tasks
    summary: List user tasks
    description: |
      Get a list of tasks for the authenticated user using cursor-based pagination.
      
      **Cursor-based Pagination:**
      - First request: Do not include cursor parameter
      - Subsequent requests: Use next_cursor from previous response
      - Better performance than page-based pagination
      
      **Note:** This endpoint returns task metadata only (no input/results data).
      Use the individual task endpoint to get structured row data.
    operationId: listTasks
    parameters:
      - name: per_page
        in: query
        description: Number of items per page
        required: true
        schema:
          type: integer
          minimum: 1
          maximum: 100
      - name: task_type
        in: query
        description: Task type filter (required for performance and security)
        required: true
        schema:
          $ref: '../components/schemas/task.yaml#/TaskType'
      - name: cursor
        in: query
        description: Cursor for pagination (omit for first page)
        required: false
        schema:
          type: integer
          format: int64
          example: 123
          description: "ID of the last task from the previous page"
    responses:
      '200':
        description: List of user's tasks (metadata only)
        content:
          application/json:
            schema:
              $ref: '../components/schemas/task.yaml#/TaskList'
      '400':
        $ref: '../components/responses/common.yaml#/BadRequest'
      '401':
        $ref: '../components/responses/common.yaml#/Unauthorized'
      '500':
        $ref: '../components/responses/common.yaml#/InternalServerError'

/tasks/{id}:
  parameters:
    - name: id
      in: path
      required: true
      description: Task ID
      schema:
        type: integer
        format: int64

  get:
    tags:
      - Tasks
    summary: Get task details with structured data
    description: |
      Retrieve detailed information about a specific task including parsed input data
      and processing results (if completed). Users can only access their own tasks.
      
      **Response includes:**
      - Task metadata (status, progress, etc.)
      - Structured input data (parsed from original Excel)
      - Processing results (if background processing completed)
      
      **Data structure for chat evaluation:**
      - Questions, golden answers, golden citations, similarity scores
      
      **Note:** For Excel file downloads, use the separate download endpoint
      for better performance and caching.
    responses:
      '200':
        description: Task details with structured input and results data
        content:
          application/json:
            schema:
              $ref: '../components/schemas/task.yaml#/TaskWithData'
            examples:
              chat_evaluation_task:
                summary: Chat Evaluation Task Example
                value:
                  id: 123
                  user_id: "system-user"
                  original_filename: "monthly_reports.xlsx"
                  sheet_name: "January_Data"
                  task_type: "chat-evaluation"
                  task_status: "completed"
                  upload_batch_id: 456789
                  row_count: 2
                  processed_rows: 2
                  created_at: "2024-01-01T00:00:00Z"
                  updated_at: "2024-01-01T00:05:00Z"
                  started_at: "2024-01-01T00:01:00Z"
                  completed_at: "2024-01-01T00:10:00Z"
                  input_data:
                    - row_number: 1
                      question: "What is AI?"
                      golden_answer: "AI is artificial intelligence..."
                      golden_citations: ["https://example.com/ai"]
                    - row_number: 2
                      question: "What is ML?"
                      golden_answer: "ML is machine learning..."
                      golden_citations: ["https://example.com/ml"]
                  results_data:
                    - row_number: 1
                      api_answer: "Artificial intelligence refers to..."
                      api_citations: ["https://api-source.com/ai"]
                      answer_similarity: 0.85
                      citation_similarity: 0.72
                    - row_number: 2
                      api_answer: "Machine learning is a subset..."
                      api_citations: ["https://api-source.com/ml"]
                      answer_similarity: 0.92
                      citation_similarity: 0.88
      '401':
        $ref: '../components/responses/common.yaml#/Unauthorized'
      '403':
        $ref: '../components/responses/common.yaml#/Forbidden'
      '404':
        $ref: '../components/responses/common.yaml#/NotFound'
      '500':
        $ref: '../components/responses/common.yaml#/InternalServerError'

  put:
    tags:
      - Tasks
    summary: Update/cancel task
    description: |
      Update a task, primarily used for cancelling tasks. Only tasks in 'queueing' or 'processing'
      status can be cancelled. Only task owners can update their tasks.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - action
            properties:
              action:
                type: string
                enum: [cancel]
                description: Action to perform on the task
                example: "cancel"
    responses:
      '200':
        description: Task updated successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/task.yaml#/Task'
      '400':
        $ref: '../components/responses/common.yaml#/BadRequest'
      '401':
        $ref: '../components/responses/common.yaml#/Unauthorized'
      '403':
        $ref: '../components/responses/common.yaml#/Forbidden'
      '404':
        $ref: '../components/responses/common.yaml#/NotFound'
      '500':
        $ref: '../components/responses/common.yaml#/InternalServerError'

  delete:
    tags:
      - Tasks
    summary: Delete task
    description: |
      Delete a task permanently. This will remove the task record and 
      associated structured data from input and output tables. 
      Only task owners can delete their tasks.
      Tasks in 'processing' status cannot be deleted.
    responses:
      '204':
        description: Task deleted successfully
      '400':
        $ref: '../components/responses/common.yaml#/BadRequest'
      '401':
        $ref: '../components/responses/common.yaml#/Unauthorized'
      '403':
        $ref: '../components/responses/common.yaml#/Forbidden'
      '404':
        $ref: '../components/responses/common.yaml#/NotFound'
      '500':
        $ref: '../components/responses/common.yaml#/InternalServerError'

/tasks/{id}/download:
  parameters:
    - name: id
      in: path
      required: true
      description: Task ID
      schema:
        type: integer
        format: int64

  get:
    tags:
      - Tasks
    summary: Download Excel file with evaluation results
    description: |
      Download a generated Excel file containing the original input data plus 
      evaluation results (API responses and similarity scores). Only available 
      for completed tasks. Only task owners can download their files.
      
      **File includes:**
      - Original questions, golden answers, and golden citations
      - API-generated answers and citations
      - Similarity scores for answers and citations
      - Processing metadata and timestamps
      
      **Performance optimizations:**
      - Direct file streaming (no JSON encoding)
      - Proper caching headers
      - Content-Disposition for download handling
    responses:
      '200':
        description: Excel file with evaluation results
        headers:
          Content-Disposition:
            description: Attachment with generated filename
            schema:
              type: string
              example: 'attachment; filename="task_123_evaluation_results.xlsx"'
          Content-Type:
            description: Excel MIME type
            schema:
              type: string
              example: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
          Content-Length:
            description: File size in bytes
            schema:
              type: integer
              example: 15360
          Cache-Control:
            description: Caching instructions
            schema:
              type: string
              example: "private, max-age=3600"
        content:
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              type: string
              format: binary
              description: Excel file binary content
      '400':
        description: Task not completed or no results available
        content:
          application/json:
            schema:
              $ref: '../components/schemas/error.yaml#/Error'
            example:
              error:
                code: "TASK_NOT_COMPLETED"
                message: "Excel file not available"
                details: "Task must be completed before results can be downloaded"
                timestamp: "2024-01-15T14:30:00Z"
                request_id: "req_abc123def456"
                user_id: "system-user"
      '401':
        $ref: '../components/responses/common.yaml#/Unauthorized'
      '403':
        $ref: '../components/responses/common.yaml#/Forbidden'
      '404':
        $ref: '../components/responses/common.yaml#/NotFound'
      '500':
        $ref: '../components/responses/common.yaml#/InternalServerError'