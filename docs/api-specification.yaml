openapi: 3.0.3
info:
  title: Internal Task Management API
  description: |
    Internal Task Management API for organizational use with Excel file processing.
    
    This API allows users to upload Excel files containing chat evaluation data.
    Files are immediately parsed during upload and stored as structured row data.
    
    **Core Features:**
    - Upload Excel files with chat evaluation data (questions, golden answers, citations)
    - Immediate parsing and structured data storage (no blob storage)
    - Task lifecycle management (create, query, cancel, delete)
    - Background processing with progress tracking
    - Structured data responses for easy frontend integration
    
    **Chat Evaluation Requirements:**
    - Excel columns "question", "golden_answer", "golden_citations"
    
    **Authentication:**
    - JWT-based authentication from internal SSO
    - User-scoped access to tasks and operations
  version: 1.0.0
  contact:
    name: Internal API Team
    email: api-team@organization.com
  license:
    name: Internal Use Only
    url: https://internal.organization.com/licenses

servers:
  - url: https://internal-api.organization.com/rest/api/v1
    description: Internal Production API Server
  - url: https://staging-api.organization.com/rest/api/v1
    description: Internal Staging API Server

components:
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT token from internal authentication service.
        Token should contain user_id, roles, and permissions.

  schemas:
    # Core Error Schema
    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
            - timestamp
          properties:
            code:
              type: string
              description: "Error code for programmatic handling"
              example: "VALIDATION_ERROR"
            message:
              type: string
              description: "Human-readable error message"
              example: "Invalid Excel file format"
            details:
              type: string
              description: "Additional error details"
              example: "File must be .xlsx or .xls format"
            timestamp:
              type: string
              format: date-time
              description: "When the error occurred"
              example: "2024-01-01T00:00:00Z"
            request_id:
              type: string
              description: "Request ID for debugging and tracing"
              example: "request_12345"
            user_id:
              type: string
              description: "User ID associated with the request"
              example: "user_123"

    # Pagination Schema
    PaginationMeta:
      type: object
      required:
        - per_page
        - total
        - has_more
      properties:
        per_page:
          type: integer
          minimum: 1
          maximum: 100
          description: "Number of items per page"
          example: 20
        total:
          type: integer
          minimum: 0
          description: "Total number of items available"
          example: 100
        next_cursor:
          type: string
          nullable: true
          description: "Cursor for next page, null if no more results"
          example: "123"
        has_more:
          type: boolean
          description: "Whether there are more results available"
          example: true

    # User Context Schema
    UserContext:
      type: object
      required:
        - user_id
        - name
        - email
      properties:
        user_id:
          type: string
          description: "Unique user identifier"
          example: "user_123"
        name:
          type: string
          description: "User's display name"
          example: "John Doe"
        email:
          type: string
          format: email
          description: "User's email address"
          example: "john.doe@organization.com"
        roles:
          type: array
          items:
            type: string
          description: "User's assigned roles"
          example: ["user", "analyst"]
        departments:
          type: array
          items:
            type: string
          description: "User's department affiliations"
          example: ["engineering", "data-science"]

    # Enum Schemas
    TaskStatus:
      type: string
      enum: [queueing, processing, completed, cancelled, failed]
      description: |
        Task status values:
        - queueing: Task created with parsed data, waiting for background processing
        - processing: Background processing is executing on the parsed rows
        - completed: All rows processed successfully
        - cancelled: Task cancelled by user
        - failed: Background processing failed with error

    TaskType:
      type: string
      enum: [chat-evaluation]
      description: |
        Task type values:
        - chat-evaluation: Chat evaluation task with questions and expected answers

    # Core Task Schema
    Task: 
      type: object
      required:
        - id
        - user_id
        - original_filename
        - sheet_name
        - task_type
        - task_status
        - upload_batch_id
        - row_count
        - processed_rows
        - created_at
      properties:
        id:
          type: integer
          format: int64
          description: "Unique task identifier"
          example: 12345
        user_id:
          type: string
          description: "ID of the user who created the task"
          example: "user_123"
        original_filename:
          type: string
          description: "Original Excel filename"
          example: "monthly_reports.xlsx"
        sheet_name:
          type: string
          description: "Excel sheet name that was processed"
          example: "January_Data"
        task_type:
          $ref: '#/components/schemas/TaskType'
        task_status:
          $ref: '#/components/schemas/TaskStatus'
        upload_batch_id:
          type: integer
          format: int64
          description: "Groups tasks from the same Excel file upload"
          example: 67890
        row_count:
          type: integer
          minimum: 0
          description: "Total number of rows parsed from Excel sheet"
          example: 150
        processed_rows:
          type: integer
          minimum: 0
          description: "Number of rows completed by background processing"
          example: 75
        error_message:
          type: string
          nullable: true
          description: "Error message if task failed"
          example: "API timeout on row 15"
        metadata:
          type: object
          nullable: true
          description: "Additional task metadata"
          example: {"detected_columns": ["question", "golden_answer"], "extra_columns": ["priority"]}
        created_at:
          type: string
          format: date-time
          description: "When the task was created"
          example: "2024-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: "When the task was last updated"
          example: "2024-01-01T00:05:00Z"
        started_at:
          type: string
          format: date-time
          nullable: true
          description: "When background processing started"
          example: "2024-01-01T00:01:00Z"
        completed_at:
          type: string
          format: date-time
          nullable: true
          description: "When the task was completed"
          example: "2024-01-01T00:10:00Z"
        cancelled_at:
          type: string
          format: date-time
          nullable: true
          description: "When the task was cancelled"

    # Chat Evaluation Data Schemas
    ChatEvaluationInputData:
      type: object
      required:
        - row_number
        - question
        - golden_answer
        - golden_citations
      properties:
        row_number:
          type: integer
          minimum: 1
          description: "Row number in the original Excel sheet"
          example: 1
        question:
          type: string
          minLength: 1
          description: "Question to be evaluated"
          example: "What is artificial intelligence?"
        golden_answer:
          type: string
          minLength: 1
          description: "Expected/golden answer for comparison"
          example: "AI is a branch of computer science that aims to create machines capable of intelligent behavior."
        golden_citations:
          type: array
          items:
            type: string
            format: uri
          minItems: 1
          description: "Expected/golden citations for comparison"
          example: ["https://example.com/ai-definition", "https://example.com/ai-overview"]
        metadata:
          type: object
          nullable: true
          description: "Additional row-specific metadata"
          example: {"priority": "high", "category": "general"}

    ChatEvaluationOutputData:
      type: object
      required:
        - row_number
        - api_answer
        - api_citations
        - answer_similarity
        - citation_similarity
      properties:
        row_number:
          type: integer
          minimum: 1
          description: "Row number matching the input data"
          example: 1
        api_answer:
          type: string
          description: "Answer returned by the API being evaluated"
          example: "Artificial intelligence (AI) refers to the simulation of human intelligence in machines."
        api_citations:
          type: array
          items:
            type: string
            format: uri
          description: "Citations returned by the API being evaluated"
          example: ["https://api-source.com/ai-definition"]
        answer_similarity:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: "Similarity score between golden answer and API answer (0-1)"
          example: 0.8567
        citation_similarity:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: "Similarity score between golden citations and API citations (0-1)"
          example: 0.7234
        processing_time_ms:
          type: integer
          minimum: 0
          nullable: true
          description: "Time taken to process this row in milliseconds"
          example: 1250

    # File Metadata Schema
    ExcelFileMetadata:
      type: object
      required:
        - filename
        - content
        - size
        - mime_type
        - generated_at
      properties:
        filename:
          type: string
          description: "Generated Excel filename"
          example: "task_12345_evaluation_results.xlsx"
        content:
          type: string
          format: byte
          description: "Base64-encoded Excel file content"
        size:
          type: integer
          minimum: 0
          description: "File size in bytes"
          example: 15360
        mime_type:
          type: string
          enum: ["application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"]
          description: "MIME type of the Excel file"
          example: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        generated_at:
          type: string
          format: date-time
          description: "When the Excel file was generated"
          example: "2024-01-01T00:10:00Z"

    # Request/Response Schemas
    TaskUpdateRequest:
      type: object
      required:
        - cancelled
      properties:
        cancelled:
          type: boolean
          description: "Set to true to cancel the task"
          example: true

    TaskList:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Task'
          description: "Array of task objects"
        meta:
          $ref: '#/components/schemas/PaginationMeta'

    UploadResponse:
      type: object
      required:
        - upload_batch_id
        - tasks
        - total_sheets
      properties:
        upload_batch_id:
          type: integer
          format: int64
          description: "Unique identifier for this upload batch"
          example: 67890
        tasks:
          type: array
          items:
            type: object
            required:
              - task_id
              - sheet_name
              - task_type
              - status
              - row_count
            properties:
              task_id:
                type: integer
                format: int64
                description: "Unique task identifier"
                example: 12345
              sheet_name:
                type: string
                description: "Excel sheet name"
                example: "Sheet1"
              task_type:
                $ref: '#/components/schemas/TaskType'
              status:
                $ref: '#/components/schemas/TaskStatus'
              row_count:
                type: integer
                minimum: 0
                description: "Number of rows parsed from this sheet"
                example: 50
          description: "Array of created tasks"
        total_sheets:
          type: integer
          minimum: 1
          description: "Total number of sheets processed"
          example: 3
        message:
          type: string
          description: "Success message"
          example: "Successfully created 3 tasks from uploaded Excel file"

    # File Download Schema
    TaskFile:
      type: object
      required:
        - filename
        - download_url
        - size
        - mime_type
        - generated_at
      properties:
        filename:
          type: string
          description: "Generated file name"
          example: "task_12345_QnAs.xlsx"
        download_url:
          type: string
          format: uri
          description: "URL to download the file"
          example: "/api/v1/tasks/12345/files/task_QnAs"
        size:
          type: integer
          minimum: 0
          description: "File size in bytes"
          example: 15360
        mime_type:
          type: string
          enum: ["application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"]
          description: "MIME type of the Excel file"
          example: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        generated_at:
          type: string
          format: date-time
          description: "When the file was generated"
          example: "2024-01-01T00:10:00Z"
        row_count:
          type: integer
          minimum: 0
          description: "Number of data rows in the file"
          example: 150

    TaskWithFiles:
      allOf:
        - $ref: '#/components/schemas/Task'
        - type: object
          properties:
            files:
              type: object
              description: "Available files for download"
              properties:
                task_QnAs:
                  allOf:
                    - $ref: '#/components/schemas/TaskFile'
                  description: "Original questions and golden answers from uploaded Excel"
                  nullable: true
                answers_and_retrieved_docs:
                  allOf:
                    - $ref: '#/components/schemas/TaskFile'
                  description: "API responses with retrieved documents and citations"
                  nullable: true
                answer_evaluation:
                  allOf:
                    - $ref: '#/components/schemas/TaskFile'
                  description: "Answer similarity scores and evaluation metrics"
                  nullable: true
                docs_evaluation:
                  allOf:
                    - $ref: '#/components/schemas/TaskFile'
                  description: "Document/citation similarity analysis and evaluation"
                  nullable: true
            bulk_download_url:
              type: string
              format: uri
              nullable: true
              description: "URL to download all files as ZIP archive (null if processing not completed)"
              example: "/api/v1/tasks/12345/files"

  responses:
    # Error Responses (used across all endpoints)
    Unauthorized:
      description: Unauthorized - Invalid or missing JWT token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error:
              code: "UNAUTHORIZED"
              message: "Invalid or expired JWT token"
              details: "Please refresh your authentication token"
              timestamp: "2024-01-15T14:30:00Z"
              request_id: "request_12345"
    
    Forbidden:
      description: Forbidden - Insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error:
              code: "FORBIDDEN"
              message: "Access denied to task"
              details: "You can only access your own tasks"
              timestamp: "2024-01-15T14:30:00Z"
              request_id: "request_12345"
              user_id: "user_123"
    
    NotFound:
      description: Not Found - Resource does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error:
              code: "NOT_FOUND"
              message: "Task not found"
              details: "Task with ID 12345 does not exist or you don't have access"
              timestamp: "2024-01-15T14:30:00Z"
              request_id: "request_12345"
              user_id: "user_123"
    
    PayloadTooLarge:
      description: Payload Too Large - File size exceeds limits
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error:
              code: "FILE_TOO_LARGE"
              message: "File size exceeds maximum limit"
              details: "Maximum file size is 50MB. Uploaded file is 75MB"
              timestamp: "2024-01-15T14:30:00Z"
              request_id: "request_12345"
              user_id: "user_123"
    
    InternalServerError:
      description: Internal Server Error - Unexpected server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error:
              code: "INTERNAL_SERVER_ERROR"
              message: "An unexpected error occurred"
              details: "Please contact support if this error persists"
              timestamp: "2024-01-15T14:30:00Z"
              request_id: "request_12345"
              user_id: "user_123"

    # Simple Success Responses (no content)
    TaskDeleted:
      description: Task deleted successfully

security:
  - JWTAuth: []

paths:
  /tasks:
    post:
      tags:
        - Tasks
      summary: Upload Excel file and create chat evaluation tasks
      description: |
        Upload an Excel file with chat evaluation data. Each sheet will be analyzed 
        and parsed immediately into structured data.
        
        **Chat Evaluation Requirements:**
        - **Required columns**: "question", "golden_answer", "golden_citations"
        
        **File Requirements:**
        - Format: .xlsx or .xls
        - Maximum size: 50MB
        - Maximum sheets: 20 per file
        - Maximum rows per sheet: 1,000
        
        **Processing:**
        - Files are parsed immediately during upload
        - Row data is stored in structured tables (no blob storage)
        - Tasks are created with references to the parsed data
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - task_type
              properties:
                file:
                  type: string
                  format: binary
                  description: Excel file (.xlsx or .xls)
                task_type:
                  $ref: '#/components/schemas/TaskType'
                  description: Task type for the uploaded data
                description:
                  type: string
                  maxLength: 500
                  description: Optional description for the upload batch
                  example: "Monthly evaluation data upload"
      responses:
        '201':
          description: Excel file processed and tasks created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
        '400':
          description: Bad Request - File upload validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalid_file_format:
                  summary: Invalid Excel file format
                  value:
                    error:
                      code: "INVALID_FILE_FORMAT"
                      message: "File must be Excel format (.xlsx or .xls)"
                      details: "Uploaded file has MIME type text/plain, expected Excel format"
                      timestamp: "2024-01-15T14:30:00Z"
                      request_id: "request_12345"
                      user_id: "user_123"
                missing_required_columns:
                  summary: Missing required Excel columns
                  value:
                    error:
                      code: "MISSING_REQUIRED_COLUMNS"
                      message: "Excel file missing required columns for chat evaluation"
                      details: "Excel must contain columns: question, golden_answer, golden_citations. Found: question, answer"
                      timestamp: "2024-01-15T14:30:00Z"
                      request_id: "request_12345"
                      user_id: "user_123"
                too_many_rows:
                  summary: Too many rows in Excel sheet
                  value:
                    error:
                      code: "TOO_MANY_ROWS"
                      message: "Excel sheet exceeds maximum row limit"
                      details: "Sheet 'Data' contains 1,500 rows. Maximum allowed is 1,000 rows per sheet"
                      timestamp: "2024-01-15T14:30:00Z"
                      request_id: "request_12345"
                      user_id: "user_123"
                too_many_sheets:
                  summary: Too many sheets in Excel file
                  value:
                    error:
                      code: "TOO_MANY_SHEETS"
                      message: "Excel file exceeds maximum sheet limit"
                      details: "File contains 25 sheets. Maximum allowed is 20 sheets per file"
                      timestamp: "2024-01-15T14:30:00Z"
                      request_id: "request_12345"
                      user_id: "user_123"
                missing_task_type:
                  summary: Missing task_type field
                  value:
                    error:
                      code: "MISSING_REQUIRED_FIELD"
                      message: "task_type is required"
                      details: "task_type field must be provided in the request body"
                      timestamp: "2024-01-15T14:30:00Z"
                      request_id: "request_12345"
                      user_id: "user_123"
                invalid_task_type:
                  summary: Invalid task_type value
                  value:
                    error:
                      code: "INVALID_TASK_TYPE"
                      message: "Invalid task_type value"
                      details: "task_type must be 'chat-evaluation'. Received: 'unknown-type'"
                      timestamp: "2024-01-15T14:30:00Z"
                      request_id: "request_12345"
                      user_id: "user_123"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '500':
          $ref: '#/components/responses/InternalServerError'

    get:
      tags:
        - Tasks
      summary: List user tasks
      description: |
        Get a list of tasks for the authenticated user using cursor-based pagination.
        
        **Cursor-based Pagination:**
        - First request: Do not include cursor parameter
        - Subsequent requests: Use next_cursor from previous response
        - Better performance than page-based pagination
        
        **Note:** This endpoint returns task metadata only (no input/results data).
        Use the individual task endpoint to get structured row data.
      operationId: listTasks
      parameters:
        - name: per_page
          in: query
          description: Number of items per page
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: task_type
          in: query
          description: Task type filter
          required: true
          schema:
            $ref: '#/components/schemas/TaskType'
        - name: cursor
          in: query
          description: |
            Cursor for pagination (omit for the first page).
            **Implementation:** The cursor value is the task_id (an incremental integer).
            **Usage:** Use the lowest task_id from the current page as the cursor for the next page.
            **Ordering:** Results are returned newest first (descending by task_id).
          required: false
          schema:
            type: string
            example: "12345"
      responses:
        '200':
          description: List of user's tasks (metadata only)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskList'
        '400':
          description: Bad Request - Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalid_per_page:
                  summary: Invalid per_page parameter
                  value:
                    error:
                      code: "INVALID_PARAMETER"
                      message: "per_page parameter is invalid"
                      details: "per_page must be between 1 and 100. Received: 150"
                      timestamp: "2024-01-15T14:30:00Z"
                      request_id: "request_12345"
                      user_id: "user_123"
                invalid_task_type_filter:
                  summary: Invalid task_type filter
                  value:
                    error:
                      code: "INVALID_TASK_TYPE"
                      message: "Invalid task_type filter"
                      details: "task_type must be 'chat-evaluation'. Received: 'unknown-type'"
                      timestamp: "2024-01-15T14:30:00Z"
                      request_id: "request_12345"
                      user_id: "user_123"
                invalid_cursor:
                  summary: Invalid cursor format
                  value:
                    error:
                      code: "INVALID_CURSOR"
                      message: "Invalid cursor format"
                      details: "cursor must be a valid task_id integer. Received: 'abc123'"
                      timestamp: "2024-01-15T14:30:00Z"
                      request_id: "request_12345"
                      user_id: "user_123"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tasks/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: Task ID
        schema:
          type: integer
          format: int64
          minimum: 1

    get:
      tags:
        - Tasks
      summary: "[TO BE DELETED] Get task details with downloadable result files"
      deprecated: true
      description: |
        **⚠️ TO BE DELETED - KEEPING FOR NOW**
        
        Retrieve detailed information about a specific task including metadata and downloadable result files.
        Users can only access their own tasks.
        
        **Response includes:**
        - Task metadata (status, progress, etc.)
        - Download URLs for 4 result files (if processing completed):
          1. **task_QnAs**: Original questions and golden answers from uploaded Excel
          2. **answers_and_retrieved_docs**: API responses with retrieved documents and citations
          3. **answer_evaluation**: Answer similarity scores and evaluation metrics  
          4. **docs_evaluation**: Document/citation similarity analysis and evaluation
        
        **File Format:** All files are Excel (.xlsx) format for easy analysis
        **File Availability:** Files are generated only after background processing completes
        - **File Access:** Use the download_url to fetch individual files
      responses:
        '200':
          description: Task details with downloadable result files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskWithFiles'
              examples:
                chat_evaluation_task:
                  summary: Chat Evaluation Task with Files
                  value:
                    id: 12345
                    user_id: "user_123"
                    original_filename: "chat_evaluation_data.xlsx"
                    sheet_name: "Evaluation_Questions"
                    task_type: "chat-evaluation"
                    task_status: "completed"
                    upload_batch_id: 67890
                    row_count: 150
                    processed_rows: 150
                    error_message: null
                    metadata: {"detected_columns": ["question", "golden_answer", "golden_citations"]}
                    created_at: "2024-01-01T00:00:00Z"
                    updated_at: "2024-01-01T00:10:00Z"
                    started_at: "2024-01-01T00:01:00Z"
                    completed_at: "2024-01-01T00:10:00Z"
                    cancelled_at: null
                    files:
                      task_QnAs:
                        filename: "task_12345_QnAs.xlsx"
                        download_url: "/api/v1/tasks/12345/files/task_QnAs"
                        size: 45120
                        mime_type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                        generated_at: "2024-01-01T00:10:00Z"
                        row_count: 150
                      answers_and_retrieved_docs:
                        filename: "task_12345_answers_and_retrieved_docs.xlsx"
                        download_url: "/api/v1/tasks/12345/files/answers_and_retrieved_docs"
                        size: 78240
                        mime_type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                        generated_at: "2024-01-01T00:10:00Z"
                        row_count: 150
                      answer_evaluation:
                        filename: "task_12345_answer_evaluation.xlsx"
                        download_url: "/api/v1/tasks/12345/files/answer_evaluation"
                        size: 32768
                        mime_type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                        generated_at: "2024-01-01T00:10:00Z"
                        row_count: 150
                      docs_evaluation:
                        filename: "task_12345_docs_evaluation.xlsx"
                        download_url: "/api/v1/tasks/12345/files/docs_evaluation"
                        size: 28672
                        mime_type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                        generated_at: "2024-01-01T00:10:00Z"
                        row_count: 150
                      bulk_download_url: "/api/v1/tasks/12345/files"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags:
        - Tasks
      summary: Cancel task
      description: |
        Cancel a task by setting cancelled=true. Only tasks in 'queueing' or 'processing'
        status can be cancelled. Only task owners can cancel their tasks.
      parameters:
        - name: cancelled
          in: query
          description: Must be set to true to cancel the task
          required: true
          schema:
            type: boolean
            enum: [true]
            example: true
      responses:
        '200':
          description: Task cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Bad Request - Invalid operation for current task status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                cannot_cancel:
                  summary: Cannot cancel task in current status
                  value:
                    error:
                      code: "INVALID_STATUS"
                      message: "Cannot cancel completed task"
                      details: "Task has already finished processing and cannot be cancelled"
                      timestamp: "2024-01-15T14:30:00Z"
                      request_id: "request_12345"
                      user_id: "user_123"
                invalid_cancelled_parameter:
                  summary: Invalid cancelled parameter
                  value:
                    error:
                      code: "INVALID_PARAMETER"
                      message: "cancelled parameter must be true"
                      details: "To cancel a task, set cancelled=true in query parameters"
                      timestamp: "2024-01-15T14:30:00Z"
                      request_id: "request_12345"
                      user_id: "user_123"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Tasks
      summary: Delete task
      description: |
        Delete a task permanently. This will remove the task record and 
        associated structured data from input and output tables. 
        Only task owners can delete their tasks.
        Tasks in 'processing' status cannot be deleted.
      responses:
        '204':
          $ref: '#/components/responses/TaskDeleted'
        '400':
          description: Bad Request - Invalid operation for current task status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  code: "INVALID_STATUS"
                  message: "Cannot delete task in processing status"
                  details: "Cancel the task first, then delete it"
                  timestamp: "2024-01-15T14:30:00Z"
                  request_id: "request_12345"
                  user_id: "user_123"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tasks/{id}/files:
    parameters:
      - name: id
        in: path
        required: true
        description: Task ID
        schema:
          type: integer
          format: int64
          minimum: 1

    get:
      tags:
        - Tasks
      summary: "[NOT FINALIZED] Download all result files as ZIP archive"
      description: |
        **🚧 NOT FINALIZED - NEEDS FURTHER REVIEW**
        
        Download all 4 result files for a completed task in a single ZIP archive. 
        Users can only download files for their own tasks.
        
        **ZIP Contents:**
        - **task_12345_QnAs.xlsx**: Original questions and golden answers
        - **task_12345_answers_and_retrieved_docs.xlsx**: API responses with retrieved documents
        - **task_12345_answer_evaluation.xlsx**: Answer similarity scores and metrics
        - **task_12345_docs_evaluation.xlsx**: Document/citation similarity analysis
        
        **Convenience:** Get all evaluation results in one download
        **Availability:** Only available for completed tasks
        
        **⚠️ DESIGN DECISIONS NEEDED:**
        - File format and structure confirmation
        - Response format validation
        - Error handling scenarios
        - Performance considerations for large files
      responses:
        '200':
          description: ZIP archive containing all result files
          content:
            application/zip:
              schema:
                type: string
                format: binary
                description: "ZIP archive with all Excel files"
          headers:
            Content-Disposition:
              description: "Attachment filename for ZIP"
              schema:
                type: string
                example: 'attachment; filename="task_12345_results.zip"'
            Content-Length:
              description: "ZIP file size in bytes"
              schema:
                type: integer
                example: 184320
        '400':
          description: Files not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  code: "FILES_NOT_AVAILABLE"
                  message: "Result files not available for download"
                  details: "Task processing not completed. Current status: processing"
                  timestamp: "2024-01-15T14:30:00Z"
                  request_id: "request_12345"
                  user_id: "user_123"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError' 